<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:android="http://schemas.android.com/apk/res/android">
  <!-- your theme inherits from the material theme -->
	<style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
    	<!-- theme customizations -->
		<item name="colorPrimary">@color/colorPrimary</item>
		<item name="colorPrimaryDark">@color/colorPrimaryDark</item>
		<item name="colorAccent">@color/colorAccent</item>
  		 <!-- You can also set colorControlNormal, colorControlActivated
         colorControlHighlight, and colorSwitchThumbNormal. -->	 		
		<item name="android:windowNoTitle">true</item>
        <item name="windowActionBar">false</item>   
        <!-- l'action mode (seleziona, copia e incolla...) sovrascrive la toolbar -->  
		<item name="android:windowActionModeOverlay">true</item>
    	<item name="android:actionModeStyle">@style/AppTheme.ActionMode</item>
	</style>
	<style name="ToolbarText">
	    <!-- i colori del testo della toolbar posso anche metterli nello stile principale, ma in tal caso,
	    cambiano anche i colori del men첫 opzioni che prende lo stile dal tema genitore (Theme.AppCompat.Light) 
	    Il men첫 posso anche formattarlo, come fatto qui con lo stile optionMenu, ma se richiamato da un tasto
	    hardware (htc one con 2 tasti ad esempio) lo stile prende i colori definiti nel AppTheme. Quindi meglio
	    separare lo stile dei testi della toolbar, dal resto della applicazione -->
		<!-- This is the  color of the title text in the Toolbar, in the Theme.AppCompat theme:  -->
  		<item name="android:textColorPrimary">@color/textToolbar</item>				<!-- TITOLO -->
  		<item name="android:actionMenuTextColor">@color/textToolbar</item>			<!-- Elementi Action -->
  		<item name="android:textColorSecondary">@color/textToolbar</item>			<!-- Three dots menu -->
  		<!-- This is the  color of the title text in the Toolbar, in the Theme.AppCompat.Light theme:  -->
  		<!-- <item name="android:textColorPrimaryInverse">@color/textToolbar</item>  -->  	    
	</style>
	<style name="AppTheme.ActionMode">
	    <item name="android:background">@color/colorPrimary</item>
	    <item name="android:height">@dimen/toolbar_height</item>
	    <!-- <item name="android:backgroundSplit">?android:attr/actionModeSplitBackground</item>  -->
	    <item name="titleTextAppearance">@style/ToolbarText</item>
	    <item name="android:subtitleTextStyle">@color/textToolbar</item>
	</style>	

	<style name="optionMenu">
	     <!-- Three dots men첫 style. Per coerenza grafica non dovrei applicarci uno stile ma utilizzare
	     quello ereditato dal genitore, ma per i telefoni moderni forse un filo di bellezza in pi첫 non guasta.
		 Rimane da sistemare, il background che rimane solo per il testo e non per la casella -->
	    <item name="android:background">@color/menu_background</item>
	    <item name="android:textColor">@color/menu_text</item>   
	    
	</style>
</resources>
